VCS Version Controlling System
	CVS - SVN - GIT
Problems without VCS?
Problem 1:
	Code in Local Machine, if system got created, we will lose code.
Problem 2:
	If two persons working on same file at a time, very difficult to merge.
Problem 3:
	If we are creating files like versions line v1, v2, v3 etc.., it is very
	difficult to maintain.
--
What is Version Control System?
	We can track changes that happen within directories of files
--
VCS Goals
	Allow developers to work simultaneously and collaboratively
	Do not overwrite
	Maintain History of every changes.
--
VCS Types
Centralized 
	Client - Server Model
	Ex: CVS, SVN
Distributed
	Client - Local - Server[github] Model
	Working Directory -> Staging Repository -> Remote Repository
Ex: GIT, bitbucket
--
Central VCS 
	Central -> User1, User2, User3
		Cons:
		If there is connection issues b/w local and remote, we can't go further.
--
Distributed VCS
	Distributed1/Remote1 -> Local1, Local2, Local3 -> User1, User2, User3
Pors:
	If there Is connection issues we can work with local VCS.
	Once connection will works, we can work on Distributed1/Remote1
--
What is GIT?
Installed Directory on the developer machine
Working Directory
Staging Area 
Git Directory
Installation
//TODO
Work with GIT
	CLI 
	GUI
	VSCODE
	Eclipse
Working with GIT
	Create Local Git Repository
	Convert Local Directory as Local Git Repository
--
Diff b/w git and github
Git is the local repo and github is central repo
--
Diff b/w pull and fetch
--
git bash here
git init
	to initialize the git
	.git folder will be created in the current directory
	create the new file readme.txt file 
Working area -> Staging area -> Local Repo
git Status 
	To check the untracked files
	
git add
To move untrack files from WA to SA
git commit -m "comments"
To commit the changes from SA to GR
git log
shows the logs
git revert id
To go previous versions
git reset id
--
Login into github, create repository
git config -global user.name "user1"
git config -global user.email user1@mail.com 

git remote add origin https://github.com/user1/gitdemo.git
git push -u origin master
	it moves readme.txt to github
--
Add some lines in readme.txt 
git status 
git add readme.txt
git commit -m "comments"
--
Get the changes from the github
git bash here
git clone https://github.com/user1/gitdemo
--
Branches

Working with GIT GUI 
	Right click on directory
GIT GUI Here
ReScan
	Scans the repository, shows the modified and changed files into un-stage area
Stage Changed
Move files from un-stage to stage
Sign Off
Commit 
Commit to Local Repository
Push
	Local /GIT to Remote/Github
Different between Directory and Repository
Folder
Before Convert Local Directory as Local Git Repository
Repository
After Convert Local Directory as Local Git Repository